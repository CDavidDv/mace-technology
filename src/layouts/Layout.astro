---
import Footer from "../components/elements/Footer.astro";
import Navbar from "../components/elements/Navbar.astro";

interface Props {
  title: string;
  varLinks?: string;
}

const { title } = Astro.props;
const { varLinks } = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="./image/svg+xml" href="./favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="MACETECHNOLOGY - Desarrollo de software y de programas a la medida">
    <script src="https://cdn.tailwindcss.com"></script>
    <title>MACETECHNOLOGY - {title}</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body class="overflow-hidden overflow-y-auto bg-body">
    <Navbar varNavbar={varLinks}/>
    <slot />
    <Footer varFooter={varLinks}/>
  </body>
  <script is:inline>
    const switchTheme = document.querySelector(
      "[data-switch-theme]"
    );
    const logo = document.querySelector('.logo_principal');

    const logo_footer = document.querySelector('#logo-footer');
    const logo_footer2 = document.querySelector('#logo-footer2');
    

    if (
      localStorage.getItem("appTheme") === "dark" ||
      (!("appTheme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.classList.add("dark");
      logo?.setAttribute('src', 'images/logo3.svg')
      logo_footer?.setAttribute('src','images/logo3.svg')
      logo_footer2?.setAttribute('src','images/logo3.svg')
    } else {
      document.documentElement.classList.remove("dark");
      logo?.setAttribute('src', 'images/logo1.svg')
      logo_footer?.setAttribute('src','images/logo1.svg')
      logo_footer2?.setAttribute('src','images/logo1.svg')
    }
    if (switchTheme) {
      switchTheme.addEventListener("click", (e) => {
        e.preventDefault();
        const doc = document.documentElement;
        if (doc) {
          if (localStorage.getItem("appTheme")) {
            if (localStorage.getItem("appTheme") === "light") {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
              logo?.setAttribute('src', 'images/logo3.svg')
              logo_footer?.setAttribute('src','images/logo3.svg')
              logo_footer2?.setAttribute('src','images/logo3.svg')
            } else {
              document.documentElement.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
              logo?.setAttribute('src', 'images/logo1.svg')
              logo_footer?.setAttribute('src','images/logo1.svg')
              logo_footer2?.setAttribute('src','images/logo1.svg')
            }
          } else {
            if (doc.classList.contains("dark")) {
              doc.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
              logo?.setAttribute('src', 'images/logo1.svg')
              logo_footer?.setAttribute('src','images/logo1.svg')
              logo_footer2?.setAttribute('src','images/logo1.svg')
            } else {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
              logo?.setAttribute('src', 'images/logo3.svg')
              logo_footer?.setAttribute('src','images/logo3.svg')
              logo_footer2?.setAttribute('src','images/logo3.svg')
            }
          }
        }
      });
    }
  </script>
  <script is:inline>
    const toggleMenu = document.querySelector(
      "[data-toggle-nav]"
    );
    const navbar = document.querySelector("[data-navbar]");
    const overlayNav = document.querySelector(
      "[data-nav-overlay]"
    );
    if (toggleMenu) {
      toggleMenu.addEventListener("click", e => {
        e.preventDefault();
        if (toggleMenu.getAttribute("data-open-nav") === "false") {
          toggleMenu.setAttribute("data-open-nav", "true");
          overlayNav.setAttribute("data-is-visible", "true");
          document.body.classList.add("!overflow-y-hidden");
		  navbar.style.height = `${navbar.scrollHeight}px`

        }else{
			toggleMenu.setAttribute("data-open-nav", "false");
        	overlayNav.setAttribute("data-is-visible", "false");
        	document.body.classList.remove("!overflow-y-hidden");
		  	navbar.style.height = "0px"
		}
		
        
      });

      navbar.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
		  	navbar.style.height = "0px"
      });

      overlayNav.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        	overlayNav.setAttribute("data-is-visible", "false");
        	document.body.classList.remove("!overflow-y-hidden");
		  	navbar.style.height = "0px"
      });
    }
  </script>
</html>
<style is:global>
  :root {
    --color-bg: 255 255 255;
    --color-border: 255 255 255;
    --color-box: 255 255 255;
    --box-border: 229 231 235;
    --box-sd: 226 232 240 / 0.5;
    --heading-1: 50 22 20;
    --heading-2: 31 41 55;
    --heading-3: 55 65 81;
  }

  .dark {
    --color-bg: 3 7 18;
    --color-box: 17 24 39;
    --box-border: 243 244 246/0.1;
    --box-sd: transparent;

	
	--heading-1:  255 255 255;
	--heading-2:  243 244 246;
	--heading-3:  209 213 219;
  }

  html{
    scroll-behavior: smooth;
  }
  body {
    font-family: "Raleway", sans-serif;
  }

  [data-toggle-nav][data-open-nav="true"] #line1 {
    transform: translateY(0.375rem) rotate(40deg);
  }
  [data-toggle-nav][data-open-nav="true"] #line2 {
    transform: scaleX(0);
    opacity: 0;
  }
  [data-toggle-nav][data-open-nav="true"] #line3 {
    transform: translateY(-0.375rem) rotate(-40deg);
  }

  
  [data-nav-overlay][data-is-visible="true"] {
    visibility: visible;
    display: flex;
  }

  /* Chrome, Safari, Edge, Opera */
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  input[type=number] {
    -moz-appearance: textfield;
  }
</style>
